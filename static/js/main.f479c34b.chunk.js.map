{"version":3,"sources":["components/SocialProfile/SocialProfile.js","components/Statistics/Statistics.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","App.js","index.js"],"names":["SocialProfile","usersProfile","map","name","tag","location","avatar","stats","id","followers","Math","random","src","alt","views","likes","Statistics","title","label","percentage","FriendList","friends","isOnline","width","TransactionHistory","items","type","amount","currency","App","users","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8yGAoCeA,EAlCO,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACvB,OACE,mCACGA,EAAaC,KAAI,YAA6C,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,IAAKC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,MAC1CC,EAAKD,EAAME,UAAYC,KAAKC,SAClC,OACE,gCACE,gCACE,qBAAKC,IAAKN,EAAQO,IAAK,iHAA8BV,IACrD,4BAAIA,IACJ,kCAAKC,KACL,4BAAIC,OAEN,+BACE,+BACE,6CACA,+BAAOE,EAAME,eAEf,+BACE,yCACA,+BAAOF,EAAMO,WAEf,+BACE,yCACA,+BAAOP,EAAMQ,gBAlBTP,SCULQ,EAhBI,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MAAOV,EAAY,EAAZA,MAC3B,OACE,oCACGU,GAAS,6BAAKA,IACf,6BACGV,EAAML,KAAI,gBAAGM,EAAH,EAAGA,GAAIU,EAAP,EAAOA,MAAOC,EAAd,EAAcA,WAAd,OACT,+BACE,+BAAOD,IACP,iCAAOC,EAAP,SAFOX,YCYJY,EAlBI,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OACE,6BACGA,EAAQnB,KAAI,gBAAGM,EAAH,EAAGA,GAAIF,EAAP,EAAOA,OAAQH,EAAf,EAAeA,KAAMmB,EAArB,EAAqBA,SAArB,OACX,+BACE,+BAAOA,EAAW,SAAW,YAC7B,qBACEV,IAAKN,EACLO,IAAK,iHAA8BV,EACnCoB,MAAM,OAER,4BAAIpB,MAPGK,SCoBFgB,EAxBY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC5B,OACE,kCACE,gCACE,+BACE,sCACA,wCACA,+CAIHA,EAAMvB,KAAI,gBAAGM,EAAH,EAAGA,GAAIkB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAQC,EAArB,EAAqBA,SAArB,OACT,gCACE,+BACE,6BAAKF,IACL,6BAAKC,IACL,6BAAKC,QAJGpB,UCOLqB,EAXH,WACV,OACE,gCACE,cAAC,EAAD,CAAe5B,aAAc6B,IAC7B,cAAC,EAAD,CAAYb,MAAM,eAAeV,MAAOwB,IACxC,cAAC,EAAD,CAAYV,QAASA,IACrB,cAAC,EAAD,CAAoBI,MAAOO,QCZjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f479c34b.chunk.js","sourcesContent":["import React from \"react\";\n\nconst SocialProfile = ({ usersProfile }) => {\n  return (\n    <>\n      {usersProfile.map(({ name, tag, location, avatar, stats }) => {\n        const id = stats.followers * Math.random();\n        return (\n          <div key={id}>\n            <div>\n              <img src={avatar} alt={\"Аватар пользователя\" + \"-\" + name} />\n              <p>{name}</p>\n              <p>@{tag}</p>\n              <p>{location}</p>\n            </div>\n            <ul>\n              <li>\n                <span>Followers</span>\n                <span>{stats.followers}</span>\n              </li>\n              <li>\n                <span>Views</span>\n                <span>{stats.views}</span>\n              </li>\n              <li>\n                <span>Likes</span>\n                <span>{stats.likes}</span>\n              </li>\n            </ul>\n          </div>\n        );\n      })}\n    </>\n  );\n};\n\nexport default SocialProfile;\n","import React from \"react\";\n\nconst Statistics = ({ title, stats }) => {\n  return (\n    <section>\n      {title && <h2>{title}</h2>}\n      <ul>\n        {stats.map(({ id, label, percentage }) => (\n          <li key={id}>\n            <span>{label}</span>\n            <span>{percentage}%</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nexport default Statistics;\n","import React from \"react\";\n\nconst FriendList = ({ friends }) => {\n  return (\n    <ul>\n      {friends.map(({ id, avatar, name, isOnline }) => (\n        <li key={id}>\n          <span>{isOnline ? \"Online\" : \"Offline\"}</span>\n          <img\n            src={avatar}\n            alt={\"Аватар пользователя\" + \"-\" + name}\n            width=\"48\"\n          />\n          <p>{name}</p>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default FriendList;\n","import React from \"react\";\n\nconst TransactionHistory = ({ items }) => {\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n      </thead>\n\n      {items.map(({ id, type, amount, currency }) => (\n        <tbody key={id}>\n          <tr>\n            <td>{type}</td>\n            <td>{amount}</td>\n            <td>{currency}</td>\n          </tr>\n        </tbody>\n      ))}\n    </table>\n  );\n};\n\nexport default TransactionHistory;\n","import React from \"react\";\nimport users from \"./components/SocialProfile/user.json\";\nimport statisticalData from \"./components/Statistics/statistical-data.json\";\nimport friends from \"./components/FriendList/friends.json\";\nimport transactions from \"./components/TransactionHistory/transactions.json\";\nimport SocialProfile from \"./components/SocialProfile/SocialProfile\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport FriendList from \"./components/FriendList/FriendList\";\nimport TransactionHistory from \"./components/TransactionHistory/TransactionHistory\";\n\nconst App = () => {\n  return (\n    <div>\n      <SocialProfile usersProfile={users} />\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      <FriendList friends={friends} />\n      <TransactionHistory items={transactions} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}